#!/usr/bin/env perl

use Mojolicious::Lite;

use File::Basename 'dirname';
use File::Spec;

use lib join '/', File::Spec->splitdir(dirname(__FILE__)), 'lib';
use lib join '/', File::Spec->splitdir(dirname(__FILE__)), '..', 'lib';

use Model::CPANMetaDB;

# not application/x-yaml for now
app->types->type(yml => 'text/x-yaml');

# / or /index.html
get '/' => 'index';
get '/index.html' => 'index';

# /v1.0/package/Some::Module::Name
get '/v1.0/package/:name' => sub {
  my $self = shift;

  my $result = Model::CPANMetaDB::get_info_for($self->param('name'));

  if (ref $result) {
    $self->render(format => 'yml', result => $result,);
  }
  else {
    $self->render_text('', status => 404);
  }
} => 'package';

app->start;

__DATA__
@@ index.html.ep
<!doctype><html>
<head><title>CPAN Meta DB</title></head>
<body>
<h1>Zak's alternate CPAN Meta DB</h1>
<p class="info">
This is an alternate site to Tatsuhiko
Miyagawa's <a href="http://cpanmetadb.appspot.com">CPAN Meta DB</a>
hosted on Google's AppEngine.  Like that site, it implements package
metadata lookup
(<code>http://cpanmetadb.zakame.net/v1.0/package/Module::Name</code>).
</p>
<p class="source">
<a href="https://github.com/zakame/cpanmetadb">Source</a> is here,
implemented in pure Perl
using <a href="http://mojolicio.us">Mojolicious</a> running
on <a href="http://plackperl.org">Plack</a>.
</p>
<h2>APIs</h2>
<dl>
<dt><code>/v1.0/package/Package::Name</code><dt>
<dd>
Returns the latest distribution file path that contains the package and
its version string ('undef' is a valid version string) in YAML
format. Returns 404 status code if the package is not found.
</dd>
</dl>
<div id="footer">
Visit my <a href="http://blogs.perl.org/users/zak_b_elep">blog</a> too.
</div>
</body>
</html>

@@ package.yml.ep
---
distfile: <%= $result->{distfile} %>
version: <%= $result->{version} %>
